

#include <stdio.h>
#include <stdlib.h>
struct Point {
    int x;
    int y;
};
int minimum_index = 1;
int size = -1;
struct Point P0;
struct Point stack[10];
void swap(struct Point *a, struct Point *b)
{
	struct Point temp = *a;
	*a = *b;
	*b = temp;
}

// Function to calculate the distance between two points
int distance(struct Point a, struct Point b)
{
	int x_diff = b.x - a.x;
	int y_diff = b.y - a.y;
	return x_diff * x_diff + y_diff * y_diff;
}

// Function to find the orientation of three points
int orientation(struct Point a, struct Point b, struct Point c)
{
	int val = (b.y - a.y) * (c.x - b.x) - (b.x - a.x) * (c.y - b.y);
	if (val == 0)
	return 0;			  // colinear
	return (val > 0) ? 1 : 2; // clock or counterclock wise
}

// Function to compare two points for sorting
int compare(const void *vp1, const void *vp2)
{
	struct Point *p1 = (struct Point *)vp1;
	struct Point *p2 = (struct Point *)vp2;
	int o = orientation(P0, *p1, *p2);
	if (o == 0)
	return (distance(P0, *p2) >= distance(P0, *p1)) ? -1 : 1;
	return (o == 2) ? -1 : 1;
}
void Grahams_ConvexHull (struct Point points[10], int n) {
    int ymin = points[0].y, min = 0;
    for (int i = 1; i < n; i++)
    {
    	int y = points[i].y;
    	if ((y < ymin) || (ymin == y && points[i].x < points[min].x))
    	{
    		ymin = points[i].y, min = i;
    	}
    }
    swap(&points[0], &points[min]);
    P0 = points[0];
    qsort(&points[1], n - 1, sizeof(struct Point), compare);
    int m = 1;
    for (int i = 1; i < n; i++)
    {
    	while (i < n - 1 && orientation(P0, points[i], points[i + 1]) == 0)
    	{
    		i++;
    	}
    	points[m] = points[i];
    	m++;
    }
    if (m < 3)
    {
    	
    	return;
    }
    stack[++size] = points[0];
    stack[++size] = points[1];
    stack[++size] = points[2];
    for (int i = 3; i < m; i++)
    {
    	while (orientation(stack[size - 1], stack[size], points[i]) != 2)
    	size--;
    	stack[++size] = points[i];
    }
    
    printf("The points in the convex hull are: \n");
    for (int i = 0; i <= size; i++)
        printf("(%d , %d)\n",stack[i].x,stack[i].y);
}

int main() {
    struct Point pts[10];
    int n;
    printf("Enter the number of points: ");
    scanf("%d",&n);
    for(int i = 0; i<n;i++) {
        printf("Enter the x and y coordinates of point %d: ",i);
        scanf("%d %d",&pts[i].x,&pts[i].y);
    }
    Grahams_ConvexHull(pts,n);
    return 0;   
}